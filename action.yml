name: Reverse dependency testing
description: A GitHub Action to run tests of downstream packages
permissions:
  actions: read
  contents: read
  metadata: read
author: "Scientific-Python"
version: "0.0.1"

inputs:
  package_name:
    description: "Upstream package name used to create reverse dependency tree."
    required: true
  ignore:
    description: |
      List of packages to be excluded from testing.

      For multiple packages, separate using spaces or use multiline syntax:

      ```yml
      ignore: package1 package2
      # or
      ignore: >-
        package1
        package2
      ```
    required: false
  whitelist:
    description: |
      Whitelist of packages to be included in testing.
      When specified, `ignore` is not used.
      The resulting set of packages to be tested is an overlap between those
      in the dependency tree and those defined in `whitelist`. If you want to
      define additional packages, use `include`.

      For multiple packages, separate using spaces or use multiline syntax:

      ```yml
      whitelist: package1 package2
      # or
      whitelist: >-
        package1
        package2
      ```
    required: false
  include:
    description: |
      A list of additional packages not in the dependency tree to be tested.
      This is useful to test known downstream packages that have your package as
      an optional dependency hence will not show up in the dependency tree.

      For multiple packages, separate using spaces or use multiline syntax:

      ```yml
      include: package1 package2
      # or
      include: >-
        package1
        package2
      ```
    required: false
  env:
    description: |
      Conda environment file to setup development environment allowing to build the package.
    required: false
  install:
    description: |
      Additional packages to be installed to the environment.
      These are not tested unless they are in the dependency tree anyway.

      For multiple packages, separate using spaces or use multiline syntax:

      ```yml
      install: package1 package2
      # or
      install: >-
        package1
        package2
      ```
    required: false
  install_pip:
    description: |
      Additional packages to be installed to the environment using pip.
      These are not tested unless they are in the dependency tree anyway.

      For multiple packages, separate using spaces or use multiline syntax:

      ```yml
      install_pip: package1 package2
      # or
      install_pip: >-
        package1
        package2
      ```
    required: false
  installation_command:
    description: A command used to install the package from the repository
    required: false
    default: pip install .
  fail_on_failure:
    description: |
      Fail the action if there is a failure in any of the tests.
    required: false
    default: "true"
  run:
    description: Command to run prior doing anything else within the micromamba docker.
    required: false
  python_version:
    description: Python version to use by default
    required: false
    default: "3.11"
  parallel:
    description: Run tests in parallel using pytest-xdist.
    required: false
    default: "true"
  verbose:
    description: Use verbose mode when running individual test suites.
    required: false
    default: "false"
runs:
  using: "docker"
  image: "Dockerfile"
